// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`integ snapshot validation 1`] = `
Object {
  "Outputs": Object {
    "AutomatedWafApiGatewayBadBotEndpoint2C06D10E": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "AutomatedWafApiGatewayBadBotEEEFB28D",
            },
            ".execute-api.us-east-1.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "AutomatedWafApiGatewayBadBotDeploymentStageprod27418F36",
            },
            "/",
          ],
        ],
      },
    },
    "AutomatedWafAppAccessLogBucketName2D6FB247": Object {
      "Value": Object {
        "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
      },
    },
    "AutomatedWafWAFWebACLArn3B5E4034": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "AutomatedWafwafwebB879D566",
          "Arn",
        ],
      },
    },
    "AutomatedWafWAFWebACLName1E8938AD": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "AutomatedWafwafwebB879D566",
          "Id",
        ],
      },
    },
    "AutomatedWafWafLogBucketName05AA8351": Object {
      "Value": Object {
        "Ref": "AutomatedWafWafLogBucket2EE15204",
      },
    },
  },
  "Parameters": Object {
    "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494ArtifactHashC2E6E6C0": Object {
      "Description": "Artifact hash for asset \\"00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494\\"",
      "Type": "String",
    },
    "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3Bucket33B61C3E": Object {
      "Description": "S3 bucket for asset \\"00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494\\"",
      "Type": "String",
    },
    "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3VersionKeyDE2514FF": Object {
      "Description": "S3 key for asset version \\"00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cArtifactHash627DAAA7": Object {
      "Description": "Artifact hash for asset \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43": Object {
      "Description": "S3 bucket for asset \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7": Object {
      "Description": "S3 key for asset version \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AutomatedWafAccessLogBucket5A7E0F8F": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafAccessLogBucketAllowBucketNotificationsToTestStackAutomatedWafForCloudFrontAutomatedWafLogParserC89576C2682C2216": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLogParser4B05F1DC",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafAccessLogBucket5A7E0F8F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWafAccessLogBucketAllowBucketNotificationsToTestStackAutomatedWafForCloudFrontAutomatedWafMoveS3LogsForPartition3C87EEF345AA1034": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafMoveS3LogsForPartition40692674",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafAccessLogBucket5A7E0F8F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWafAccessLogBucketAutoDeleteObjectsCustomResource6D92944F": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AutomatedWafAccessLogBucketPolicyE11FCBFA",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafAccessLogBucketNotificationsDD364EE6": Object {
      "DependsOn": Array [
        "AutomatedWafAccessLogBucketAllowBucketNotificationsToTestStackAutomatedWafForCloudFrontAutomatedWafLogParserC89576C2682C2216",
        "AutomatedWafAccessLogBucketAllowBucketNotificationsToTestStackAutomatedWafForCloudFrontAutomatedWafMoveS3LogsForPartition3C87EEF345AA1034",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "LambdaFunctionConfigurations": Array [
            Object {
              "Events": Array [
                "s3:ObjectCreated:*",
              ],
              "Filter": Object {
                "Key": Object {
                  "FilterRules": Array [
                    Object {
                      "Name": "suffix",
                      "Value": "gz",
                    },
                    Object {
                      "Name": "prefix",
                      "Value": "AWSLogs/",
                    },
                  ],
                },
              },
              "LambdaFunctionArn": Object {
                "Fn::GetAtt": Array [
                  "AutomatedWafMoveS3LogsForPartition40692674",
                  "Arn",
                ],
              },
            },
            Object {
              "Events": Array [
                "s3:ObjectCreated:*",
              ],
              "Filter": Object {
                "Key": Object {
                  "FilterRules": Array [
                    Object {
                      "Name": "suffix",
                      "Value": "csv",
                    },
                    Object {
                      "Name": "prefix",
                      "Value": "athena_results/",
                    },
                  ],
                },
              },
              "LambdaFunctionArn": Object {
                "Fn::GetAtt": Array [
                  "AutomatedWafLogParser4B05F1DC",
                  "Arn",
                ],
              },
            },
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "AutomatedWafAccessLogBucketPolicyE11FCBFA": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafAccessLogBucket5A7E0F8F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "AutomatedWafAddAthenaPartitionsB53046F5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AddAthenaPartitionsLambda": Object {
          "Ref": "AutomatedWafAddAthenaPartitionsFunction2D4DB365",
        },
        "AppAccessLogBucket": Object {
          "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
        },
        "AthenaWorkGroup": "WAFAddPartitionAthenaQueryWorkGroupCloudFront_ApiGW",
        "GlueAccessLogsDatabase": Object {
          "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
        },
        "GlueAppAccessLogsTable": "app_access_logs",
        "GlueWafAccessLogsTable": Object {
          "Ref": "AutomatedWafGlueWafAccessLogsTable323DC62F",
        },
        "ResourceType": "Custom::AddAthenaPartitions",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81",
            "Arn",
          ],
        },
        "WafLogBucket": Object {
          "Ref": "AutomatedWafWafLogBucket2EE15204",
        },
      },
      "Type": "Custom::AddAthenaPartitions",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafAddAthenaPartitionsFunction2D4DB365": Object {
      "DependsOn": Array [
        "AutomatedWafAddAthenaPartitionsFunctionServiceRoleDefaultPolicy5A2CDA7E",
        "AutomatedWafAddAthenaPartitionsFunctionServiceRoleCA10CEEE",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.us-east-1.",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:a1dbf41675e1b0318048d55ff15272b2269c0e349a10847b20d4788aa85916d8",
              ],
            ],
          },
        },
        "Description": "This function adds a new hourly partition to athena table. It runs every hour, triggered by a CloudWatch event.",
        "Environment": Object {
          "Variables": Object {
            "LOG_LEVEL": "DEBUG",
          },
        },
        "ImageConfig": Object {
          "Command": Array [
            "add_athena_partitions.lambda_handler",
          ],
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafAddAthenaPartitionsFunctionServiceRoleCA10CEEE",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafAddAthenaPartitionsFunctionEventInvokeConfig429E3E41": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "AutomatedWafAddAthenaPartitionsFunction2D4DB365",
        },
        "MaximumEventAgeInSeconds": 21600,
        "MaximumRetryAttempts": 2,
        "Qualifier": "$LATEST",
      },
      "Type": "AWS::Lambda::EventInvokeConfig",
    },
    "AutomatedWafAddAthenaPartitionsFunctionServiceRoleCA10CEEE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafAddAthenaPartitionsFunctionServiceRoleDefaultPolicy5A2CDA7E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
                "glue:GetTable",
                "glue:GetDatabase",
                "glue:UpdateDatabase",
                "glue:CreateDatabase",
                "glue:BatchCreatePartition",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "athena:StartQueryExecution",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AutomatedWafAddAthenaPartitionsFunctionServiceRoleDefaultPolicy5A2CDA7E",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafAddAthenaPartitionsFunctionServiceRoleCA10CEEE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafApiGatewayBadBotANY53805DE4": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafBadBotParserF07D91E5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "RequestParameters": Object {
          "method.request.header.X-Forwarded-For": false,
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafApiGatewayBadBotEEEFB28D",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "AutomatedWafApiGatewayBadBotEEEFB28D",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "AutomatedWafApiGatewayBadBotANYApiPermissionTestStackAutomatedWafForCloudFrontAutomatedWafApiGatewayBadBot9F0BE278ANY293995B4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafBadBotParserF07D91E5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "AutomatedWafApiGatewayBadBotEEEFB28D",
              },
              "/",
              Object {
                "Ref": "AutomatedWafApiGatewayBadBotDeploymentStageprod27418F36",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWafApiGatewayBadBotANYApiPermissionTestTestStackAutomatedWafForCloudFrontAutomatedWafApiGatewayBadBot9F0BE278ANY94877CF4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafBadBotParserF07D91E5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "AutomatedWafApiGatewayBadBotEEEFB28D",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWafApiGatewayBadBotAccount8FD75CD3": Object {
      "DependsOn": Array [
        "AutomatedWafApiGatewayBadBotEEEFB28D",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafApiGatewayBadBotCloudWatchRoleDB830819",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "AutomatedWafApiGatewayBadBotCloudWatchRoleDB830819": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafApiGatewayBadBotDeployment3D9229DDa268e15c2e8b86500b1466f1cd56c826": Object {
      "DependsOn": Array [
        "AutomatedWafApiGatewayBadBotproxyANYDDF3BABE",
        "AutomatedWafApiGatewayBadBotproxy9C6DF647",
        "AutomatedWafApiGatewayBadBotANY53805DE4",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "AutomatedWafApiGatewayBadBotEEEFB28D",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "AutomatedWafApiGatewayBadBotDeploymentStageprod27418F36": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "AutomatedWafApiGatewayBadBotDeployment3D9229DDa268e15c2e8b86500b1466f1cd56c826",
        },
        "RestApiId": Object {
          "Ref": "AutomatedWafApiGatewayBadBotEEEFB28D",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "AutomatedWafApiGatewayBadBotEEEFB28D": Object {
      "Properties": Object {
        "Description": "API created by AWS WAF Security Automation CloudFormation template. This endpoint will be used to capture bad bots.",
        "Name": "Security Automation - WAF Bad Bot API",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "AutomatedWafApiGatewayBadBotproxy9C6DF647": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafApiGatewayBadBotEEEFB28D",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "AutomatedWafApiGatewayBadBotEEEFB28D",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "AutomatedWafApiGatewayBadBotproxyANYApiPermissionTestStackAutomatedWafForCloudFrontAutomatedWafApiGatewayBadBot9F0BE278ANYproxy9BA29AED": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafBadBotParserF07D91E5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "AutomatedWafApiGatewayBadBotEEEFB28D",
              },
              "/",
              Object {
                "Ref": "AutomatedWafApiGatewayBadBotDeploymentStageprod27418F36",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWafApiGatewayBadBotproxyANYApiPermissionTestTestStackAutomatedWafForCloudFrontAutomatedWafApiGatewayBadBot9F0BE278ANYproxy477BEE6E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafBadBotParserF07D91E5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "AutomatedWafApiGatewayBadBotEEEFB28D",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWafApiGatewayBadBotproxyANYDDF3BABE": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafBadBotParserF07D91E5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "RequestParameters": Object {
          "method.request.header.X-Forwarded-For": false,
        },
        "ResourceId": Object {
          "Ref": "AutomatedWafApiGatewayBadBotproxy9C6DF647",
        },
        "RestApiId": Object {
          "Ref": "AutomatedWafApiGatewayBadBotEEEFB28D",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "AutomatedWafBadBotCloudFormationAccess9E724F75": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudFormationAccess",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafBadBotRoleC113C626",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafBadBotCloudWatchAccess030A976C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudwatch:GetMetricStatistics",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchAccess",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafBadBotRoleC113C626",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafBadBotLogsAccessA5010D30": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogsAccess",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafBadBotRoleC113C626",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafBadBotParserF07D91E5": Object {
      "DependsOn": Array [
        "AutomatedWafBadBotRoleC113C626",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.us-east-1.",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:6dab48c81d3846aba1c94e157a4fbf6750d5af55649e300b72470c5d4c294a98",
              ],
            ],
          },
        },
        "Description": "This lambda function will intercepts and inspects trap endpoint requests to extract its IP address, and then add it to an AWS WAF block list.",
        "Environment": Object {
          "Variables": Object {
            "IP_SET_ID_BAD_BOTV4": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafIPBadBotSetIPV4E08F64F0",
                "Arn",
              ],
            },
            "IP_SET_ID_BAD_BOTV6": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafIPBadBotSetIPV63981A4B4",
                "Arn",
              ],
            },
            "IP_SET_NAME_BAD_BOTV4": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "IPBadBotSetIPV4",
                ],
              ],
            },
            "IP_SET_NAME_BAD_BOTV6": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "IPBadBotSetIPV6",
                ],
              ],
            },
            "LOG_LEVEL": "DEBUG",
            "LOG_TYPE": "cloudfront",
            "METRICS_URL": "https://metrics.awssolutionsbuilder.com/generic",
            "METRIC_NAME_PREFIX": Object {
              "Ref": "AWS::StackName",
            },
            "REGION": Object {
              "Ref": "AWS::Region",
            },
            "SCOPE": "CLOUDFRONT",
            "SEND_ANONYMOUS_USAGE_DATA": "No",
            "SOLUTION_ID": "SO8128",
            "STACK_NAME": Object {
              "Ref": "AWS::StackName",
            },
            "UUID": "CreateUniqueID.UUID",
          },
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafBadBotRoleC113C626",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafBadBotRoleC113C626": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafBadBotWAFGetAndUpdateIPSetF47DB13C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "wafv2:GetIPSet",
                "wafv2:UpdateIPSet",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WAFGetAndUpdateIPSet",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafBadBotRoleC113C626",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafBlacklistSetIPV4C531747A": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Allow blacklist for IPV4 addresses",
        "IPAddressVersion": "IPV4",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "BlacklistSetIPV4",
            ],
          ],
        },
        "Scope": "CLOUDFRONT",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafBlacklistSetIPV6BE33F4F7": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Allow blacklist for IPV6 addresses",
        "IPAddressVersion": "IPV6",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "BlacklistSetIPV6",
            ],
          ],
        },
        "Scope": "CLOUDFRONT",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafCloudFormationAccess22772444": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudFormationAccess",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafLambdaRoleReputationListsParserC1735D71",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafCloudWatchAccess862AC7AF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudwatch:GetMetricStatistics",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchAccess",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafLambdaRoleReputationListsParserC1735D71",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafCloudWatchLogsEA571D0B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchLogs",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafLambdaRoleReputationListsParserC1735D71",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafConfigureAWSWAFLogs8AB5B70D": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DeliveryStreamArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafFirehoseWAFLogsDeliveryStreamE118CD07",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81",
            "Arn",
          ],
        },
        "WAFWebACLArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafwafwebB879D566",
            "Arn",
          ],
        },
      },
      "Type": "Custom::ConfigureAWSWAFLogs",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafConfigureAppAccessLogBucket5F33D9A2": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AppAccessLogBucket": Object {
          "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
        },
        "LogParser": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLogParser4B05F1DC",
            "Arn",
          ],
        },
        "MoveS3LogsForPartition": Object {
          "Ref": "AutomatedWafMoveS3LogsForPartition40692674",
        },
        "Region": Object {
          "Ref": "AWS::Region",
        },
        "ScannersProbesAthenaLogParser": "yes",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81",
            "Arn",
          ],
        },
      },
      "Type": "Custom::ConfigureAppAccessLogBucket",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafConfigureWafLogBucketBA242BD5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "HttpFloodAthenaLogParser": "yes",
        "LogParser": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLogParser4B05F1DC",
            "Arn",
          ],
        },
        "Region": Object {
          "Ref": "AWS::Region",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81",
            "Arn",
          ],
        },
        "WafLogBucket": Object {
          "Ref": "AutomatedWafWafLogBucket2EE15204",
        },
      },
      "Type": "Custom::ConfigureWafLogBucket",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafConfigureWebAcl96791AA5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81",
            "Arn",
          ],
        },
        "WAFWhitelistSetIPV4": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafWhitelistSetIPV44815715F",
            "Id",
          ],
        },
        "WAFWhitelistSetIPV4Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "WhitelistSetIPV4",
            ],
          ],
        },
      },
      "Type": "Custom::ConfigureWebAcl",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafCustomResourceD07D74AF": Object {
      "DependsOn": Array [
        "AutomatedWafCustomResourceServiceRoleDefaultPolicy776FC3B2",
        "AutomatedWafCustomResourceServiceRole154F25D9",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.us-east-1.",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:1dfede2ffdae0c9f1a24b4891809f4236502614eec71989bedcf18c778964184",
              ],
            ],
          },
        },
        "Description": "This lambda function configures the Web ACL rules based on the features enabled in the CloudFormation template.",
        "Environment": Object {
          "Variables": Object {
            "LOG_LEVEL": "DEBUG",
            "METRICS_URL": "https://metrics.awssolutionsbuilder.com/generic",
            "SCOPE": "CLOUDFRONT",
            "SOLUTION_ID": "SO8128",
          },
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafCustomResourceServiceRole154F25D9",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafCustomResourceServiceRole154F25D9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafCustomResourceServiceRoleDefaultPolicy776FC3B2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":cloudformation:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stack/Stack/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":lambda:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":function:TestStackAutomatedWafForCloudFront*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "wafv2:GetIPSet",
                "wafv2:DeleteIPSet",
                "wafv2:GetWebACL",
                "wafv2:UpdateWebACL",
                "wafv2:DeleteLoggingConfiguration",
                "wafv2:PutLoggingConfiguration",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AutomatedWafwafwebB879D566",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "wafv2:GetIPSet",
                "wafv2:DeleteIPSet",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":regional/ipset/TestStackAutomatedWafForCloudFront*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":global/ipset/TestStackAutomatedWafForCloudFront*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/*CustomResource*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:CreateBucket",
                "s3:GetBucketNotification",
                "s3:PutBucketNotification",
                "s3:PutEncryptionConfiguration",
                "s3:PutBucketPublicAccessBlock",
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafAccessLogBucket5A7E0F8F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:CreateBucket",
                "s3:GetBucketNotification",
                "s3:PutBucketNotification",
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafWafLogBucket2EE15204",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/aws-service-role/wafv2.amazonaws.com/AWSServiceRoleForWAFV2Logging",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AutomatedWafCustomResourceServiceRoleDefaultPolicy776FC3B2",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafCustomResourceServiceRole154F25D9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafCustomTimer7A5EFB57": Object {
      "DependsOn": Array [
        "AutomatedWafCustomTimerServiceRole2E154BE4",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.us-east-1.",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:7e55e8e738134b4ceb0aa8b7b4be156c25b8efe41bf478903e4912c83cbc373a",
              ],
            ],
          },
        },
        "Description": "This lambda function counts X seconds and can be used to slow down component creation in CloudFormation",
        "Environment": Object {
          "Variables": Object {
            "LOG_LEVEL": "DEBUG",
            "SECONDS": "2",
          },
        },
        "MemorySize": 128,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafCustomTimerServiceRole2E154BE4",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafCustomTimerServiceRole2E154BE4": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafFirehoseRole4586B7C2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafFirehoseRoleDefaultPolicy69CD2E16": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStream",
                "kinesis:GetShardIterator",
                "kinesis:GetRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafWafLogBucket2EE15204",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AutomatedWafFirehoseRoleDefaultPolicy69CD2E16",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafFirehoseRole4586B7C2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafFirehoseWAFLogsDeliveryStreamE118CD07": Object {
      "Properties": Object {
        "DeliveryStreamName": "aws-waf-logs-TestStackAutomatedWafForCloudFront",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "AutomatedWafWafLogBucket2EE15204",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 300,
            "SizeInMBs": 5,
          },
          "CompressionFormat": "GZIP",
          "ErrorOutputPrefix": "AWSErrorLogs/result=!{firehose:error-output-type}/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/",
          "Prefix": "AWSLogs/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/",
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "AutomatedWafFirehoseRole4586B7C2",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "AutomatedWafGenerateAppLogParserConfFileD940B91C": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AppAccessLogBucket": Object {
          "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
        },
        "ErrorThreshold": 55,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81",
            "Arn",
          ],
        },
        "StackName": "TestStackAutomatedWafForCloudFront",
        "WAFBlockPeriod": 60,
      },
      "Type": "Custom::GenerateAppLogParserConfFile",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafGenerateWafLogParserConfFile2E24E502": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RequestThreshold": 3000,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81",
            "Arn",
          ],
        },
        "StackName": "TestStackAutomatedWafForCloudFront",
        "WAFBlockPeriod": 60,
        "WafAccessLogBucket": Object {
          "Ref": "AutomatedWafWafLogBucket2EE15204",
        },
      },
      "Type": "Custom::GenerateWafLogParserConfFile",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafGlueAccessLogsDatabaseA7CECCA5": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": Object {
          "Name": "glue_accesslogs_database_cloudfront_apigw",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "AutomatedWafGlueWafAccessLogsTable323DC62F": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
        },
        "TableInput": Object {
          "Description": "TestStackAutomatedWafForCloudFront - WAF Logs",
          "Name": "waf_access_logs",
          "Parameters": Object {
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "year",
              "Type": "int",
            },
            Object {
              "Name": "month",
              "Type": "int",
            },
            Object {
              "Name": "day",
              "Type": "int",
            },
            Object {
              "Name": "hour",
              "Type": "int",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "timestamp",
                "Type": "bigint",
              },
              Object {
                "Name": "formatversion",
                "Type": "int",
              },
              Object {
                "Name": "webaclid",
                "Type": "string",
              },
              Object {
                "Name": "terminatingruleid",
                "Type": "string",
              },
              Object {
                "Name": "terminatingruletype",
                "Type": "string",
              },
              Object {
                "Name": "action",
                "Type": "string",
              },
              Object {
                "Name": "httpsourcename",
                "Type": "string",
              },
              Object {
                "Name": "httpsourceid",
                "Type": "string",
              },
              Object {
                "Name": "rulegrouplist",
                "Type": "array<string>",
              },
              Object {
                "Name": "ratebasedrulelist",
                "Type": "array<string>",
              },
              Object {
                "Name": "nonterminatingmatchingrules",
                "Type": "array<string>",
              },
              Object {
                "Name": "httprequest",
                "Type": "struct<clientip:string,country:string,headers:array<struct<name:string,value:string>>,uri:string,args:string,httpversion:string,httpmethod:string,requestid:string>",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "AutomatedWafWafLogBucket2EE15204",
                  },
                  "/AWSLogs/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.openx.data.jsonserde.JsonSerDe",
            },
            "StoredAsSubDirectories": false,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "AutomatedWafHTTPFloodSetIPV45E80241E": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block HTTP Flood IPV4 addresses",
        "IPAddressVersion": "IPV4",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "HTTPFloodSetIPV4",
            ],
          ],
        },
        "Scope": "CLOUDFRONT",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafHTTPFloodSetIPV6B1957F78": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block HTTP Flood IPV6 addresses",
        "IPAddressVersion": "IPV6",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "HTTPFloodSetIPV6",
            ],
          ],
        },
        "Scope": "CLOUDFRONT",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafHelperADDFD506": Object {
      "DependsOn": Array [
        "AutomatedWafHelperServiceRoleE6D147A2",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.us-east-1.",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:eb7852c09e371e910ae5de85d56cae5e2cb4c0d85e522715e1125d5941307e71",
              ],
            ],
          },
        },
        "Description": "This lambda function verifies the main project's dependencies, requirements and implement auxiliary functions.",
        "Environment": Object {
          "Variables": Object {
            "LOG_LEVEL": "DEBUG",
            "SCOPE": "CLOUDFRONT",
          },
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafHelperServiceRoleE6D147A2",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafHelperServiceRoleE6D147A2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafIPBadBotSetIPV4E08F64F0": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block Bad Bot IPV4 addresses",
        "IPAddressVersion": "IPV4",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "IPBadBotSetIPV4",
            ],
          ],
        },
        "Scope": "CLOUDFRONT",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafIPBadBotSetIPV63981A4B4": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block Bad Bot IPV6 addresses",
        "IPAddressVersion": "IPV6",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "IPBadBotSetIPV6",
            ],
          ],
        },
        "Scope": "CLOUDFRONT",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafIPReputationListsSetIPV4FCA0B71A": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block Reputation List IPV4 addresses",
        "IPAddressVersion": "IPV4",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "IPReputationListsSetIPV4",
            ],
          ],
        },
        "Scope": "CLOUDFRONT",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafIPReputationListsSetIPV6863B7D87": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block Reputation List IPV6 addresses",
        "IPAddressVersion": "IPV6",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "IPReputationListsSetIPV6",
            ],
          ],
        },
        "Scope": "CLOUDFRONT",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafLambdaRoleReputationListsParserC1735D71": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafLogParser4B05F1DC": Object {
      "DependsOn": Array [
        "AutomatedWafLogParserServiceRoleDefaultPolicy7CC70F1E",
        "AutomatedWafLogParserServiceRoleA0F93DE3",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.us-east-1.",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:a1dbf41675e1b0318048d55ff15272b2269c0e349a10847b20d4788aa85916d8",
              ],
            ],
          },
        },
        "Description": "This function parses access logs to identify suspicious behavior, such as an abnormal amount of errors. It then blocks those IP addresses for a customer-defined period of time.",
        "Environment": Object {
          "Variables": Object {
            "APP_ACCESS_LOG_BUCKET": Object {
              "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
            },
            "ERROR_THRESHOLD": "55",
            "IP_SET_ID_HTTP_FLOODV4": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafHTTPFloodSetIPV45E80241E",
                "Arn",
              ],
            },
            "IP_SET_ID_HTTP_FLOODV6": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafHTTPFloodSetIPV6B1957F78",
                "Arn",
              ],
            },
            "IP_SET_ID_SCANNERS_PROBESV4": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafScannersProbesSetIPV4971BDD58",
                "Arn",
              ],
            },
            "IP_SET_ID_SCANNERS_PROBESV6": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafScannersProbesSetIPV6BD366E85",
                "Arn",
              ],
            },
            "IP_SET_NAME_HTTP_FLOODV4": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "HTTPFloodSetIPV4",
                ],
              ],
            },
            "IP_SET_NAME_HTTP_FLOODV6": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "HTTPFloodSetIPV6",
                ],
              ],
            },
            "IP_SET_NAME_SCANNERS_PROBESV4": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "ScannersProbesSetIPV4",
                ],
              ],
            },
            "IP_SET_NAME_SCANNERS_PROBESV6": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "ScannersProbesSetIPV6",
                ],
              ],
            },
            "LIMIT_IP_ADDRESS_RANGES_PER_IP_MATCH_CONDITION": "10000",
            "LOG_LEVEL": "DEBUG",
            "LOG_TYPE": "cloudfront",
            "MAX_AGE_TO_UPDATE": "30",
            "METRICS_URL": "https://metrics.awssolutionsbuilder.com/generic",
            "METRIC_NAME_PREFIX": Object {
              "Ref": "AWS::StackName",
            },
            "REGION": "AWS::Region",
            "REQUEST_THRESHOLD": "3000",
            "SCOPE": "CLOUDFRONT",
            "SEND_ANONYMOUS_USAGE_DATA": "No",
            "SOLUTION_ID": "SO8128",
            "STACK_NAME": Object {
              "Ref": "AWS::StackName",
            },
            "UUID": "CreateUniqueID.UUID",
            "WAF_ACCESS_LOG_BUCKET": Object {
              "Ref": "AutomatedWafWafLogBucket2EE15204",
            },
            "WAF_BLOCK_PERIOD": "60",
          },
        },
        "ImageConfig": Object {
          "Command": Array [
            "log-parser.lambda_handler",
          ],
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLogParserServiceRoleA0F93DE3",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafLogParserServiceRoleA0F93DE3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafLogParserServiceRoleDefaultPolicy7CC70F1E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "glue:GetTable",
                "glue:GetPartitions",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:us-east-1:",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:us-east-1:",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      Object {
                        "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
                      },
                      "/waf_access_logs",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
                      },
                      "/app_access_logs",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "wafv2:GetIPSet",
                "wafv2:UpdateIPSet",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafHTTPFloodSetIPV45E80241E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafHTTPFloodSetIPV6B1957F78",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafScannersProbesSetIPV4971BDD58",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafScannersProbesSetIPV6BD366E85",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "athena:GetNamedQuery",
                "athena:StartQueryExecution",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":athena:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":workgroup/WAF*",
                  ],
                ],
              },
            },
            Object {
              "Action": "cloudwatch:GetMetricStatistics",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":athena:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/*LogParser*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:ListMultipartUploadParts",
                "s3:AbortMultipartUpload",
                "s3:CreateBucket",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/athena_results/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafAccessLogBucket5A7E0F8F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/athena_results/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafWafLogBucket2EE15204",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:ListMultipartUploadParts",
                "s3:AbortMultipartUpload",
                "s3:CreateBucket",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/athena_results/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/athena_results/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafWafLogBucket2EE15204",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafAccessLogBucket5A7E0F8F",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/TestStackAutomatedWafForCloudFront-waf_log_out.json",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/TestStackAutomatedWafForCloudFront-waf_log_conf.json",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/TestStackAutomatedWafForCloudFront-waf_log_out.json",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/TestStackAutomatedWafForCloudFront-waf_log_conf.json",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AutomatedWafLogParserServiceRoleDefaultPolicy7CC70F1E",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafLogParserServiceRoleA0F93DE3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafMonitoringDashboardE81139D1": Object {
      "Properties": Object {
        "DashboardBody": "{\\"widgets\\":[{\\"type\\":\\"metric\\",\\"x\\":0,\\"y\\":0,\\"width\\":15,\\"height\\":10,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"stacked\\":false,\\"metrics\\":[[\\"WAF\\",\\"BlockedRequests\\",\\"WebACL\\",\\"WAFWebACLMetricName\\",\\"Rule\\",\\"ALL\\"],[\\"WAF\\",\\"AllowedRequests\\",\\"WebACL\\",\\"WAFWebACLMetricName\\",\\"Rule\\",\\"ALL\\"]],\\"region\\":\\"us-east-1\\",\\"period\\":300}}]}",
        "DashboardName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "WAFMonitoringDashboardCloudFront_ApiGW",
              Object {
                "Ref": "AWS::Region",
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "AutomatedWafMoveS3LogsForPartition40692674": Object {
      "DependsOn": Array [
        "AutomatedWafMoveS3LogsForPartitionServiceRoleDefaultPolicyBE103735",
        "AutomatedWafMoveS3LogsForPartitionServiceRoleA16E415E",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.us-east-1.",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:a1dbf41675e1b0318048d55ff15272b2269c0e349a10847b20d4788aa85916d8",
              ],
            ],
          },
        },
        "Description": "This function is triggered by S3 event to move log files(upon their arrival in s3) from their original location to a partitioned folder structure created per timestamps in file names, hence allowing the usage of partitioning within AWS Athena.",
        "Environment": Object {
          "Variables": Object {
            "ENDPOINT": "CloudFront",
            "KEEP_ORIGINAL_DATA": "No",
            "LOG_LEVEL": "DEBUG",
          },
        },
        "ImageConfig": Object {
          "Command": Array [
            "partition_s3_logs.lambda_handler",
          ],
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafMoveS3LogsForPartitionServiceRoleA16E415E",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafMoveS3LogsForPartitionServiceRoleA16E415E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafMoveS3LogsForPartitionServiceRoleDefaultPolicyBE103735": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":athena:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/*MoveS3LogsForPartition*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject",
                "s3:DeleteObject",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "AutomatedWafAccessLogBucket5A7E0F8F",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AutomatedWafMoveS3LogsForPartitionServiceRoleDefaultPolicyBE103735",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafMoveS3LogsForPartitionServiceRoleA16E415E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafReputationListsParser34210143": Object {
      "DependsOn": Array [
        "AutomatedWafLambdaRoleReputationListsParserC1735D71",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.us-east-1.",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:b5dbbe39524d51c3b8aae20b2d5c91794d39f96b66f100c27591e6ba9d425326",
              ],
            ],
          },
        },
        "Description": "This lambda function checks third-party IP reputation lists hourly for new IP ranges to block. These lists include the Spamhaus Dont Route Or Peer (DROP) and Extended Drop (EDROP) lists, the Proofpoint Emerging Threats IP list, and the Tor exit node list.",
        "Environment": Object {
          "Variables": Object {
            "IPREPUTATIONLIST_METRICNAME": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "IPReputationListsRule",
                ],
              ],
            },
            "IP_SET_ID_REPUTATIONV4": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafIPReputationListsSetIPV4FCA0B71A",
                "Arn",
              ],
            },
            "IP_SET_ID_REPUTATIONV6": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafIPReputationListsSetIPV6863B7D87",
                "Arn",
              ],
            },
            "IP_SET_NAME_REPUTATIONV4": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "IPReputationListsSetIPV4",
                ],
              ],
            },
            "IP_SET_NAME_REPUTATIONV6": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "IPReputationListsSetIPV6",
                ],
              ],
            },
            "LOG_LEVEL": "DEBUG",
            "LOG_TYPE": "cloudfront",
            "METRICS_URL": "https://metrics.awssolutionsbuilder.com/generic",
            "SCOPE": "CLOUDFRONT",
            "SEND_ANONYMOUS_USAGE_DATA": "No",
            "SOLUTION_ID": "SO8128",
            "STACK_NAME": Object {
              "Ref": "AWS::StackName",
            },
            "URL_LIST": "[{\\"url\\":\\"https://www.spamhaus.org/drop/drop.txt\\"},{\\"url\\":\\"https://www.spamhaus.org/drop/edrop.txt\\"},{\\"url\\":\\"https://check.torproject.org/exit-addresses\\", \\"prefix\\":\\"ExitAddress\\"},{\\"url\\":\\"https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt\\"}]",
          },
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLambdaRoleReputationListsParserC1735D71",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafReputationListsParserEventsRuleAllowEventRuleTestStackAutomatedWafForCloudFrontAutomatedWafReputationListsParserDB0EEB965FFDFD57": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafReputationListsParser34210143",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafReputationListsParserEventsRuleCD91E1B1",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWafReputationListsParserEventsRuleCD91E1B1": Object {
      "Properties": Object {
        "Description": "Security Automation - WAF Reputation Lists",
        "ScheduleExpression": "rate(1 hour)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafReputationListsParser34210143",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"URL_LIST\\":[{\\"url\\":\\"https://www.spamhaus.org/drop/drop.txt\\"},{\\"url\\":\\"https://www.spamhaus.org/drop/edrop.txt\\"},{\\"url\\":\\"https://check.torproject.org/exit-addresses\\",\\"prefix\\":\\"ExitAddress\\"},{\\"url\\":\\"https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt\\"}],\\"IP_SET_ID_REPUTATIONV4\\":\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "AutomatedWafIPReputationListsSetIPV4FCA0B71A",
                      "Arn",
                    ],
                  },
                  "\\",\\"IP_SET_ID_REPUTATIONV6\\":\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "AutomatedWafIPReputationListsSetIPV6863B7D87",
                      "Arn",
                    ],
                  },
                  "\\",\\"IP_SET_NAME_REPUTATIONV4\\":\\"",
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "IPReputationListsSetIPV4\\",\\"IP_SET_NAME_REPUTATIONV6\\":\\"",
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "IPReputationListsSetIPV6\\",\\"SCOPE\\":\\"CLOUDFRONT\\"}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AutomatedWafScannersProbesSetIPV4971BDD58": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block Scanners/Probes IPV4 addresses",
        "IPAddressVersion": "IPV4",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "ScannersProbesSetIPV4",
            ],
          ],
        },
        "Scope": "CLOUDFRONT",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafScannersProbesSetIPV6BD366E85": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block Scanners/Probes IPV6 addresses",
        "IPAddressVersion": "IPV6",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "ScannersProbesSetIPV6",
            ],
          ],
        },
        "Scope": "CLOUDFRONT",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafWAFAddPartitionAthenaQueryWorkGroup49879515": Object {
      "Properties": Object {
        "Description": "Athena WorkGroup for adding Athena partition queries used by AWS WAF Security Automations Solution",
        "Name": "WAFAddPartitionAthenaQueryWorkGroupCloudFront_ApiGW",
        "RecursiveDeleteOption": true,
        "State": "ENABLED",
        "WorkGroupConfiguration": Object {
          "EnforceWorkGroupConfiguration": false,
          "PublishCloudWatchMetricsEnabled": true,
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "AutomatedWafWAFAppAccessLogAthenaQueryWorkGroupFE2E8C88": Object {
      "Properties": Object {
        "Description": "Athena WorkGroup for CloudFront or ALB application access log queries used by AWS WAF Security Automations Solution",
        "Name": "WAFAppAccessLogAthenaQueryWorkGroupCloudFront_ApiGW",
        "RecursiveDeleteOption": true,
        "State": "ENABLED",
        "WorkGroupConfiguration": Object {
          "PublishCloudWatchMetricsEnabled": true,
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "AutomatedWafWAFGetAndUpdateIPSet1848DC2F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "wafv2:GetIPSet",
                "wafv2:UpdateIPSet",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WAFGetAndUpdateIPSet",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafLambdaRoleReputationListsParserC1735D71",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafWAFLogAthenaQueryWorkGroup478EEEAE": Object {
      "Properties": Object {
        "Description": "Athena WorkGroup for WAF log queries used by AWS WAF Security Automations Solution",
        "Name": "WAFLogAthenaQueryWorkGroupCloudFront_ApiGW",
        "RecursiveDeleteOption": true,
        "State": "ENABLED",
        "WorkGroupConfiguration": Object {
          "PublishCloudWatchMetricsEnabled": true,
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "AutomatedWafWafLogBucket2EE15204": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafWafLogBucketAllowBucketNotificationsToTestStackAutomatedWafForCloudFrontAutomatedWafLogParserC89576C26444A3E3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLogParser4B05F1DC",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafWafLogBucket2EE15204",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWafWafLogBucketAutoDeleteObjectsCustomResource776A478E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AutomatedWafWafLogBucketPolicy62BAB889",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "AutomatedWafWafLogBucket2EE15204",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafWafLogBucketNotificationsD40C475A": Object {
      "DependsOn": Array [
        "AutomatedWafWafLogBucketAllowBucketNotificationsToTestStackAutomatedWafForCloudFrontAutomatedWafLogParserC89576C26444A3E3",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "AutomatedWafWafLogBucket2EE15204",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "LambdaFunctionConfigurations": Array [
            Object {
              "Events": Array [
                "s3:ObjectCreated:*",
              ],
              "Filter": Object {
                "Key": Object {
                  "FilterRules": Array [
                    Object {
                      "Name": "suffix",
                      "Value": "csv",
                    },
                    Object {
                      "Name": "prefix",
                      "Value": "athena_results/",
                    },
                  ],
                },
              },
              "LambdaFunctionArn": Object {
                "Fn::GetAtt": Array [
                  "AutomatedWafLogParser4B05F1DC",
                  "Arn",
                ],
              },
            },
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "AutomatedWafWafLogBucketPolicy62BAB889": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "AutomatedWafWafLogBucket2EE15204",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafWafLogBucket2EE15204",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "AutomatedWafWhitelistSetIPV44815715F": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Allow whitelist for IPV4 addresses",
        "IPAddressVersion": "IPV4",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "WhitelistSetIPV4",
            ],
          ],
        },
        "Scope": "CLOUDFRONT",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafWhitelistSetIPV6F7FFF598": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Allow whitelist for IPV6 addresses",
        "IPAddressVersion": "IPV6",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "WhitelistSetIPV6",
            ],
          ],
        },
        "Scope": "CLOUDFRONT",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81": Object {
      "DependsOn": Array [
        "AutomatedWafcustomResourceProviderframeworkonEventServiceRoleDefaultPolicyD7A10B89",
        "AutomatedWafcustomResourceProviderframeworkonEventServiceRole2DA7C1F7",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - onEvent (TestStackAutomatedWafForCloudFront/AutomatedWaf/customResourceProvider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafCustomResourceD07D74AF",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEventServiceRole2DA7C1F7",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafcustomResourceProviderframeworkonEventServiceRole2DA7C1F7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafcustomResourceProviderframeworkonEventServiceRoleDefaultPolicyD7A10B89": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AutomatedWafCustomResourceD07D74AF",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AutomatedWafcustomResourceProviderframeworkonEventServiceRoleDefaultPolicyD7A10B89",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafcustomResourceProviderframeworkonEventServiceRole2DA7C1F7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafglueAppAccessLogsTable61BB14AB": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
        },
        "TableInput": Object {
          "Description": "TestStackAutomatedWafForCloudFront - APP Access Logs",
          "Name": "app_access_logs",
          "Parameters": Object {
            "EXTERNAL": "TRUE",
            "skip.header.line.count": "2",
          },
          "PartitionKeys": Array [
            Object {
              "Name": "year",
              "Type": "int",
            },
            Object {
              "Name": "month",
              "Type": "int",
            },
            Object {
              "Name": "day",
              "Type": "int",
            },
            Object {
              "Name": "hour",
              "Type": "int",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "date",
                "Type": "date",
              },
              Object {
                "Name": "time",
                "Type": "string",
              },
              Object {
                "Name": "location",
                "Type": "string",
              },
              Object {
                "Name": "bytes",
                "Type": "bigint",
              },
              Object {
                "Name": "requestip",
                "Type": "string",
              },
              Object {
                "Name": "method",
                "Type": "string",
              },
              Object {
                "Name": "host",
                "Type": "string",
              },
              Object {
                "Name": "uri",
                "Type": "string",
              },
              Object {
                "Name": "status",
                "Type": "int",
              },
              Object {
                "Name": "referrer",
                "Type": "string",
              },
              Object {
                "Name": "useragent",
                "Type": "string",
              },
              Object {
                "Name": "querystring",
                "Type": "string",
              },
              Object {
                "Name": "cookie",
                "Type": "string",
              },
              Object {
                "Name": "resulttype",
                "Type": "string",
              },
              Object {
                "Name": "requestid",
                "Type": "string",
              },
              Object {
                "Name": "hostheader",
                "Type": "string",
              },
              Object {
                "Name": "requestprotocol",
                "Type": "string",
              },
              Object {
                "Name": "requestbytes",
                "Type": "bigint",
              },
              Object {
                "Name": "timetaken",
                "Type": "float",
              },
              Object {
                "Name": "xforwardedfor",
                "Type": "string",
              },
              Object {
                "Name": "sslprotocol",
                "Type": "string",
              },
              Object {
                "Name": "sslcipher",
                "Type": "string",
              },
              Object {
                "Name": "responseresulttype",
                "Type": "string",
              },
              Object {
                "Name": "httpversion",
                "Type": "string",
              },
              Object {
                "Name": "filestatus",
                "Type": "string",
              },
              Object {
                "Name": "encryptedfields",
                "Type": "int",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
                  },
                  "/AWSLogs-Partitioned/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
            "SerdeInfo": Object {
              "Parameters": Object {
                "field.delim": "	",
                "serialization.format": "	",
              },
              "SerializationLibrary": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
            },
            "StoredAsSubDirectories": false,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "AutomatedWaflambdaAddAthenaPartitionAllowEventRuleTestStackAutomatedWafForCloudFrontAutomatedWafAddAthenaPartitionsFunctionA488838359A979EC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafAddAthenaPartitionsFunction2D4DB365",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWaflambdaAddAthenaPartitionDD4D8921",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWaflambdaAddAthenaPartitionDD4D8921": Object {
      "Properties": Object {
        "Description": "Security Automations - Add partitions to Athena table",
        "ScheduleExpression": "rate(1 hour)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafAddAthenaPartitionsFunction2D4DB365",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"resourceType\\":\\"LambdaAddAthenaPartitionsEventsRule\\",\\"glueAccessLogsDatabase\\":\\"",
                  Object {
                    "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
                  },
                  "\\",\\"accessLogBucket\\":\\"",
                  Object {
                    "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
                  },
                  "\\",\\"glueAppAccessLogsTable\\":\\"app_access_logs\\",\\"glueWafAccessLogsTable\\":\\"",
                  Object {
                    "Ref": "AutomatedWafGlueWafAccessLogsTable323DC62F",
                  },
                  "\\",\\"wafLogBucket\\":\\"",
                  Object {
                    "Ref": "AutomatedWafWafLogBucket2EE15204",
                  },
                  "\\",\\"athenaWorkGroup\\":\\"WAFAddPartitionAthenaQueryWorkGroupCloudFront_ApiGW\\"}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AutomatedWaflambdaAthenaAppLogParserRule9657CE82": Object {
      "Properties": Object {
        "Description": "Security Automation - App Logs Athena parser",
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafLogParser4B05F1DC",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"resourceType\\":\\"LambdaAthenaAppLogParser\\",\\"glueAccessLogsDatabase\\":\\"",
                  Object {
                    "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
                  },
                  "\\",\\"accessLogBucket\\":\\"",
                  Object {
                    "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
                  },
                  "\\",\\"glueAppAccessLogsTable\\":\\"app_access_logs\\",\\"athenaWorkGroup\\":\\"WAFAppAccessLogAthenaQueryWorkGroupCloudFront_ApiGW\\"}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AutomatedWaflambdaAthenaAppLogParserRuleAllowEventRuleTestStackAutomatedWafForCloudFrontAutomatedWafLogParserC89576C2E10FB163": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLogParser4B05F1DC",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWaflambdaAthenaAppLogParserRule9657CE82",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWaflambdaAthenaWAFLogParserRule877B7CDF": Object {
      "Properties": Object {
        "Description": "Security Automation - WAF Logs Athena parser",
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafLogParser4B05F1DC",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"resourceType\\":\\"LambdaAthenaWAFLogParser\\",\\"glueAccessLogsDatabase\\":\\"",
                  Object {
                    "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
                  },
                  "\\",\\"accessLogBucket\\":\\"",
                  Object {
                    "Ref": "AutomatedWafWafLogBucket2EE15204",
                  },
                  "\\",\\"glueWafAccessLogsTable\\":\\"",
                  Object {
                    "Ref": "AutomatedWafGlueWafAccessLogsTable323DC62F",
                  },
                  "\\",\\"athenaWorkGroup\\":\\"WAFLogAthenaQueryWorkGroupCloudFront_ApiGW\\"}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AutomatedWaflambdaAthenaWAFLogParserRuleAllowEventRuleTestStackAutomatedWafForCloudFrontAutomatedWafLogParserC89576C2F5F91B34": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLogParser4B05F1DC",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWaflambdaAthenaWAFLogParserRule877B7CDF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWafwafwebB879D566": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Description": "Custom WAFWebACL",
        "Name": "CloudFront_ApiGW-WAF",
        "Rules": Array [
          Object {
            "Name": "AWS-AWSManagedRulesCommonRuleSet",
            "OverrideAction": Object {
              "None": Object {},
            },
            "Priority": 0,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "CloudFront_ApiGW-waf-ipset-metrics",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Allow": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "WhitelistRule",
                ],
              ],
            },
            "Priority": 1,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWhitelistSetIPV44815715F",
                          "Arn",
                        ],
                      },
                    },
                  },
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWhitelistSetIPV6F7FFF598",
                          "Arn",
                        ],
                      },
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "WhitelistRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "BlacklistRule",
                ],
              ],
            },
            "Priority": 2,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafBlacklistSetIPV4C531747A",
                          "Arn",
                        ],
                      },
                    },
                  },
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafBlacklistSetIPV6BE33F4F7",
                          "Arn",
                        ],
                      },
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "BlacklistRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "HttpFloodRegularRule",
                ],
              ],
            },
            "Priority": 3,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafHTTPFloodSetIPV45E80241E",
                          "Arn",
                        ],
                      },
                    },
                  },
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafHTTPFloodSetIPV6B1957F78",
                          "Arn",
                        ],
                      },
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "HttpFloodRegularRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "ScannersProbesRule",
                ],
              ],
            },
            "Priority": 5,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafScannersProbesSetIPV4971BDD58",
                          "Arn",
                        ],
                      },
                    },
                  },
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafScannersProbesSetIPV6BD366E85",
                          "Arn",
                        ],
                      },
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "ScannersProbesRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "IPReputationListsRule",
                ],
              ],
            },
            "Priority": 6,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafIPReputationListsSetIPV4FCA0B71A",
                          "Arn",
                        ],
                      },
                    },
                  },
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafIPReputationListsSetIPV6863B7D87",
                          "Arn",
                        ],
                      },
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "IPReputationListsRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "SqlInjectionRule",
                ],
              ],
            },
            "Priority": 20,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "SqliMatchStatement": Object {
                      "FieldToMatch": Object {
                        "QueryString": Object {},
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                  Object {
                    "SqliMatchStatement": Object {
                      "FieldToMatch": Object {
                        "Body": Object {},
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                  Object {
                    "SqliMatchStatement": Object {
                      "FieldToMatch": Object {
                        "UriPath": Object {},
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                  Object {
                    "SqliMatchStatement": Object {
                      "FieldToMatch": Object {
                        "SingleHeader": Object {
                          "Name": "Authorization",
                        },
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                  Object {
                    "SqliMatchStatement": Object {
                      "FieldToMatch": Object {
                        "SingleHeader": Object {
                          "Name": "Cookie",
                        },
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "SqlInjectionRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "XssRule",
                ],
              ],
            },
            "Priority": 30,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "XssMatchStatement": Object {
                      "FieldToMatch": Object {
                        "QueryString": Object {},
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                  Object {
                    "XssMatchStatement": Object {
                      "FieldToMatch": Object {
                        "Body": Object {},
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                  Object {
                    "XssMatchStatement": Object {
                      "FieldToMatch": Object {
                        "UriPath": Object {},
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                  Object {
                    "XssMatchStatement": Object {
                      "FieldToMatch": Object {
                        "SingleHeader": Object {
                          "name": "Cookie",
                        },
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "XssRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "BadBotRule",
                ],
              ],
            },
            "Priority": 7,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafIPBadBotSetIPV4E08F64F0",
                          "Arn",
                        ],
                      },
                    },
                  },
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafIPBadBotSetIPV63981A4B4",
                          "Arn",
                        ],
                      },
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "BadBotRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "CLOUDFRONT",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "CloudFront_ApiGW-WAF",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": Object {
      "DependsOn": Array [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "import boto3  # type: ignore
import json
import logging
import urllib.request

s3 = boto3.client(\\"s3\\")

CONFIGURATION_TYPES = [\\"TopicConfigurations\\", \\"QueueConfigurations\\", \\"LambdaFunctionConfigurations\\"]

def handler(event: dict, context):
    response_status = \\"SUCCESS\\"
    error_message = \\"\\"
    try:
        props = event[\\"ResourceProperties\\"]
        bucket = props[\\"BucketName\\"]
        notification_configuration = props[\\"NotificationConfiguration\\"]
        request_type = event[\\"RequestType\\"]
        managed = props.get('Managed', 'true').lower() == 'true'
        stack_id = event['StackId']

        if managed:
          config = handle_managed(request_type, notification_configuration)
        else:
          config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

        put_bucket_notification_configuration(bucket, config)
    except Exception as e:
        logging.exception(\\"Failed to put bucket notification configuration\\")
        response_status = \\"FAILED\\"
        error_message = f\\"Error: {str(e)}. \\"
    finally:
        submit_response(event, context, response_status, error_message)


def handle_managed(request_type, notification_configuration):
  if request_type == 'Delete':
    return {}
  return notification_configuration


def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):

  # find external notifications
  external_notifications = find_external_notifications(bucket, stack_id)

  # if delete, that's all we need
  if request_type == 'Delete':
    return external_notifications

  def with_id(notification):
    notification['Id'] = f\\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\\"
    return notification

  # otherwise, merge external with incoming config and augment with id
  notifications = {}
  for t in CONFIGURATION_TYPES:
    external = external_notifications.get(t, [])
    incoming = [with_id(n) for n in notification_configuration.get(t, [])]
    notifications[t] = external + incoming
  return notifications


def find_external_notifications(bucket, stack_id):
  existing_notifications = get_bucket_notification_configuration(bucket)
  external_notifications = {}
  for t in CONFIGURATION_TYPES:
    # if the notification was created by us, we know what id to expect
    # so we can filter by it.
    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\\"{stack_id}-\\")]

  return external_notifications


def get_bucket_notification_configuration(bucket):
  return s3.get_bucket_notification_configuration(Bucket=bucket)


def put_bucket_notification_configuration(bucket, notification_configuration):
  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)


def submit_response(event: dict, context, response_status: str, error_message: str):
    response_body = json.dumps(
        {
            \\"Status\\": response_status,
            \\"Reason\\": f\\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\\",
            \\"PhysicalResourceId\\": event.get(\\"PhysicalResourceId\\") or event[\\"LogicalResourceId\\"],
            \\"StackId\\": event[\\"StackId\\"],
            \\"RequestId\\": event[\\"RequestId\\"],
            \\"LogicalResourceId\\": event[\\"LogicalResourceId\\"],
            \\"NoEcho\\": False,
        }
    ).encode(\\"utf-8\\")
    headers = {\\"content-type\\": \\"\\", \\"content-length\\": str(len(response_body))}
    try:
        req = urllib.request.Request(url=event[\\"ResponseURL\\"], headers=headers, data=response_body, method=\\"PUT\\")
        with urllib.request.urlopen(req) as response:
            print(response.read().decode(\\"utf-8\\"))
        print(\\"Status code: \\" + response.reason)
    except Exception as e:
        print(\\"send(..) failed executing request.urlopen(..): \\" + str(e))
",
        },
        "Description": "AWS CloudFormation handler for \\"Custom::S3BucketNotifications\\" resources (@aws-cdk/aws-s3)",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn",
          ],
        },
        "Runtime": "python3.7",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": Array [
          Object {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3Bucket33B61C3E",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3VersionKeyDE2514FF",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3VersionKeyDE2514FF",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "AutomatedWafWafLogBucket2EE15204",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`integ snapshot validation 2`] = `
Object {
  "Outputs": Object {
    "AutomatedWafAppAccessLogBucketName2D6FB247": Object {
      "Value": Object {
        "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
      },
    },
    "AutomatedWafWAFWebACLArn3B5E4034": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "AutomatedWafwafwebB879D566",
          "Arn",
        ],
      },
    },
    "AutomatedWafWAFWebACLName1E8938AD": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "AutomatedWafwafwebB879D566",
          "Id",
        ],
      },
    },
    "AutomatedWafWafLogBucketName05AA8351": Object {
      "Value": Object {
        "Ref": "AutomatedWafWafLogBucket2EE15204",
      },
    },
  },
  "Parameters": Object {
    "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494ArtifactHashC2E6E6C0": Object {
      "Description": "Artifact hash for asset \\"00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494\\"",
      "Type": "String",
    },
    "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3Bucket33B61C3E": Object {
      "Description": "S3 bucket for asset \\"00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494\\"",
      "Type": "String",
    },
    "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3VersionKeyDE2514FF": Object {
      "Description": "S3 key for asset version \\"00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cArtifactHash627DAAA7": Object {
      "Description": "Artifact hash for asset \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43": Object {
      "Description": "S3 bucket for asset \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7": Object {
      "Description": "S3 key for asset version \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AutomatedWafAccessLogBucket5A7E0F8F": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafAccessLogBucketAllowBucketNotificationsToTestStackAutomatedWafForALBAutomatedWafLogParser4478D8201AD0BEAA": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLogParser4B05F1DC",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafAccessLogBucket5A7E0F8F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWafAccessLogBucketAllowBucketNotificationsToTestStackAutomatedWafForALBAutomatedWafMoveS3LogsForPartitionE03C7B9BA2D8095A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafMoveS3LogsForPartition40692674",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafAccessLogBucket5A7E0F8F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWafAccessLogBucketAutoDeleteObjectsCustomResource6D92944F": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AutomatedWafAccessLogBucketPolicyE11FCBFA",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafAccessLogBucketNotificationsDD364EE6": Object {
      "DependsOn": Array [
        "AutomatedWafAccessLogBucketAllowBucketNotificationsToTestStackAutomatedWafForALBAutomatedWafLogParser4478D8201AD0BEAA",
        "AutomatedWafAccessLogBucketAllowBucketNotificationsToTestStackAutomatedWafForALBAutomatedWafMoveS3LogsForPartitionE03C7B9BA2D8095A",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "LambdaFunctionConfigurations": Array [
            Object {
              "Events": Array [
                "s3:ObjectCreated:*",
              ],
              "Filter": Object {
                "Key": Object {
                  "FilterRules": Array [
                    Object {
                      "Name": "suffix",
                      "Value": "gz",
                    },
                    Object {
                      "Name": "prefix",
                      "Value": "AWSLogs/",
                    },
                  ],
                },
              },
              "LambdaFunctionArn": Object {
                "Fn::GetAtt": Array [
                  "AutomatedWafMoveS3LogsForPartition40692674",
                  "Arn",
                ],
              },
            },
            Object {
              "Events": Array [
                "s3:ObjectCreated:*",
              ],
              "Filter": Object {
                "Key": Object {
                  "FilterRules": Array [
                    Object {
                      "Name": "suffix",
                      "Value": "csv",
                    },
                    Object {
                      "Name": "prefix",
                      "Value": "athena_results/",
                    },
                  ],
                },
              },
              "LambdaFunctionArn": Object {
                "Fn::GetAtt": Array [
                  "AutomatedWafLogParser4B05F1DC",
                  "Arn",
                ],
              },
            },
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "AutomatedWafAccessLogBucketPolicyE11FCBFA": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafAccessLogBucket5A7E0F8F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::undefined:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "AutomatedWafAccessLogBucket5A7E0F8F",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "AutomatedWafAccessLogBucket5A7E0F8F",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AutomatedWafAccessLogBucket5A7E0F8F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "AutomatedWafAddAthenaPartitionsB53046F5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AddAthenaPartitionsLambda": Object {
          "Ref": "AutomatedWafAddAthenaPartitionsFunction2D4DB365",
        },
        "AppAccessLogBucket": Object {
          "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
        },
        "AthenaWorkGroup": "WAFAddPartitionAthenaQueryWorkGroupAlb_Api",
        "GlueAccessLogsDatabase": Object {
          "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
        },
        "GlueAppAccessLogsTable": "app_access_logs",
        "GlueWafAccessLogsTable": Object {
          "Ref": "AutomatedWafGlueWafAccessLogsTable323DC62F",
        },
        "ResourceType": "Custom::AddAthenaPartitions",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81",
            "Arn",
          ],
        },
        "WafLogBucket": Object {
          "Ref": "AutomatedWafWafLogBucket2EE15204",
        },
      },
      "Type": "Custom::AddAthenaPartitions",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafAddAthenaPartitionsFunction2D4DB365": Object {
      "DependsOn": Array [
        "AutomatedWafAddAthenaPartitionsFunctionServiceRoleDefaultPolicy5A2CDA7E",
        "AutomatedWafAddAthenaPartitionsFunctionServiceRoleCA10CEEE",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:a1dbf41675e1b0318048d55ff15272b2269c0e349a10847b20d4788aa85916d8",
              ],
            ],
          },
        },
        "Description": "This function adds a new hourly partition to athena table. It runs every hour, triggered by a CloudWatch event.",
        "Environment": Object {
          "Variables": Object {
            "LOG_LEVEL": "DEBUG",
          },
        },
        "ImageConfig": Object {
          "Command": Array [
            "add_athena_partitions.lambda_handler",
          ],
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafAddAthenaPartitionsFunctionServiceRoleCA10CEEE",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafAddAthenaPartitionsFunctionEventInvokeConfig429E3E41": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "AutomatedWafAddAthenaPartitionsFunction2D4DB365",
        },
        "MaximumEventAgeInSeconds": 21600,
        "MaximumRetryAttempts": 2,
        "Qualifier": "$LATEST",
      },
      "Type": "AWS::Lambda::EventInvokeConfig",
    },
    "AutomatedWafAddAthenaPartitionsFunctionServiceRoleCA10CEEE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafAddAthenaPartitionsFunctionServiceRoleDefaultPolicy5A2CDA7E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
                "glue:GetTable",
                "glue:GetDatabase",
                "glue:UpdateDatabase",
                "glue:CreateDatabase",
                "glue:BatchCreatePartition",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "athena:StartQueryExecution",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AutomatedWafAddAthenaPartitionsFunctionServiceRoleDefaultPolicy5A2CDA7E",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafAddAthenaPartitionsFunctionServiceRoleCA10CEEE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafBlacklistSetIPV4C531747A": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Allow blacklist for IPV4 addresses",
        "IPAddressVersion": "IPV4",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "BlacklistSetIPV4",
            ],
          ],
        },
        "Scope": "REGIONAL",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafBlacklistSetIPV6BE33F4F7": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Allow blacklist for IPV6 addresses",
        "IPAddressVersion": "IPV6",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "BlacklistSetIPV6",
            ],
          ],
        },
        "Scope": "REGIONAL",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafCloudFormationAccess22772444": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudFormationAccess",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafLambdaRoleReputationListsParserC1735D71",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafCloudWatchAccess862AC7AF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudwatch:GetMetricStatistics",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchAccess",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafLambdaRoleReputationListsParserC1735D71",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafCloudWatchLogsEA571D0B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchLogs",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafLambdaRoleReputationListsParserC1735D71",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafConfigureAWSWAFLogs8AB5B70D": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DeliveryStreamArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafFirehoseWAFLogsDeliveryStreamE118CD07",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81",
            "Arn",
          ],
        },
        "WAFWebACLArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafwafwebB879D566",
            "Arn",
          ],
        },
      },
      "Type": "Custom::ConfigureAWSWAFLogs",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafConfigureAppAccessLogBucket5F33D9A2": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AppAccessLogBucket": Object {
          "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
        },
        "LogParser": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLogParser4B05F1DC",
            "Arn",
          ],
        },
        "MoveS3LogsForPartition": Object {
          "Ref": "AutomatedWafMoveS3LogsForPartition40692674",
        },
        "Region": Object {
          "Ref": "AWS::Region",
        },
        "ScannersProbesAthenaLogParser": "yes",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81",
            "Arn",
          ],
        },
      },
      "Type": "Custom::ConfigureAppAccessLogBucket",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafConfigureWafLogBucketBA242BD5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "HttpFloodAthenaLogParser": "yes",
        "LogParser": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLogParser4B05F1DC",
            "Arn",
          ],
        },
        "Region": Object {
          "Ref": "AWS::Region",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81",
            "Arn",
          ],
        },
        "WafLogBucket": Object {
          "Ref": "AutomatedWafWafLogBucket2EE15204",
        },
      },
      "Type": "Custom::ConfigureWafLogBucket",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafConfigureWebAcl96791AA5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81",
            "Arn",
          ],
        },
        "WAFWhitelistSetIPV4": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafWhitelistSetIPV44815715F",
            "Id",
          ],
        },
        "WAFWhitelistSetIPV4Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "WhitelistSetIPV4",
            ],
          ],
        },
      },
      "Type": "Custom::ConfigureWebAcl",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafCustomResourceD07D74AF": Object {
      "DependsOn": Array [
        "AutomatedWafCustomResourceServiceRoleDefaultPolicy776FC3B2",
        "AutomatedWafCustomResourceServiceRole154F25D9",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:1dfede2ffdae0c9f1a24b4891809f4236502614eec71989bedcf18c778964184",
              ],
            ],
          },
        },
        "Description": "This lambda function configures the Web ACL rules based on the features enabled in the CloudFormation template.",
        "Environment": Object {
          "Variables": Object {
            "LOG_LEVEL": "DEBUG",
            "METRICS_URL": "https://metrics.awssolutionsbuilder.com/generic",
            "SCOPE": "REGIONAL",
            "SOLUTION_ID": "SO8128",
          },
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafCustomResourceServiceRole154F25D9",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafCustomResourceServiceRole154F25D9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafCustomResourceServiceRoleDefaultPolicy776FC3B2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":cloudformation:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stack/Stack/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":lambda:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":function:TestStackAutomatedWafForALB*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "wafv2:GetIPSet",
                "wafv2:DeleteIPSet",
                "wafv2:GetWebACL",
                "wafv2:UpdateWebACL",
                "wafv2:DeleteLoggingConfiguration",
                "wafv2:PutLoggingConfiguration",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AutomatedWafwafwebB879D566",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "wafv2:GetIPSet",
                "wafv2:DeleteIPSet",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":regional/ipset/TestStackAutomatedWafForALB*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":global/ipset/TestStackAutomatedWafForALB*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/*CustomResource*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:CreateBucket",
                "s3:GetBucketNotification",
                "s3:PutBucketNotification",
                "s3:PutEncryptionConfiguration",
                "s3:PutBucketPublicAccessBlock",
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafAccessLogBucket5A7E0F8F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:CreateBucket",
                "s3:GetBucketNotification",
                "s3:PutBucketNotification",
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafWafLogBucket2EE15204",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/aws-service-role/wafv2.amazonaws.com/AWSServiceRoleForWAFV2Logging",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AutomatedWafCustomResourceServiceRoleDefaultPolicy776FC3B2",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafCustomResourceServiceRole154F25D9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafCustomTimer7A5EFB57": Object {
      "DependsOn": Array [
        "AutomatedWafCustomTimerServiceRole2E154BE4",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:7e55e8e738134b4ceb0aa8b7b4be156c25b8efe41bf478903e4912c83cbc373a",
              ],
            ],
          },
        },
        "Description": "This lambda function counts X seconds and can be used to slow down component creation in CloudFormation",
        "Environment": Object {
          "Variables": Object {
            "LOG_LEVEL": "DEBUG",
            "SECONDS": "2",
          },
        },
        "MemorySize": 128,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafCustomTimerServiceRole2E154BE4",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafCustomTimerServiceRole2E154BE4": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafFirehoseRole4586B7C2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafFirehoseRoleDefaultPolicy69CD2E16": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:DescribeStream",
                "kinesis:GetShardIterator",
                "kinesis:GetRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafWafLogBucket2EE15204",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AutomatedWafFirehoseRoleDefaultPolicy69CD2E16",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafFirehoseRole4586B7C2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafFirehoseWAFLogsDeliveryStreamE118CD07": Object {
      "Properties": Object {
        "DeliveryStreamName": "aws-waf-logs-TestStackAutomatedWafForALB",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "AutomatedWafWafLogBucket2EE15204",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 300,
            "SizeInMBs": 5,
          },
          "CompressionFormat": "GZIP",
          "ErrorOutputPrefix": "AWSErrorLogs/result=!{firehose:error-output-type}/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/",
          "Prefix": "AWSLogs/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/",
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "AutomatedWafFirehoseRole4586B7C2",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "AutomatedWafGenerateAppLogParserConfFileD940B91C": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AppAccessLogBucket": Object {
          "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
        },
        "ErrorThreshold": 50,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81",
            "Arn",
          ],
        },
        "StackName": "TestStackAutomatedWafForALB",
        "WAFBlockPeriod": 60,
      },
      "Type": "Custom::GenerateAppLogParserConfFile",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafGenerateWafLogParserConfFile2E24E502": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RequestThreshold": 300,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81",
            "Arn",
          ],
        },
        "StackName": "TestStackAutomatedWafForALB",
        "WAFBlockPeriod": 60,
        "WafAccessLogBucket": Object {
          "Ref": "AutomatedWafWafLogBucket2EE15204",
        },
      },
      "Type": "Custom::GenerateWafLogParserConfFile",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafGlueAccessLogsDatabaseA7CECCA5": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": Object {
          "Name": "glue_accesslogs_database_alb_api",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "AutomatedWafGlueWafAccessLogsTable323DC62F": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
        },
        "TableInput": Object {
          "Description": "TestStackAutomatedWafForALB - WAF Logs",
          "Name": "waf_access_logs",
          "Parameters": Object {
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "year",
              "Type": "int",
            },
            Object {
              "Name": "month",
              "Type": "int",
            },
            Object {
              "Name": "day",
              "Type": "int",
            },
            Object {
              "Name": "hour",
              "Type": "int",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "timestamp",
                "Type": "bigint",
              },
              Object {
                "Name": "formatversion",
                "Type": "int",
              },
              Object {
                "Name": "webaclid",
                "Type": "string",
              },
              Object {
                "Name": "terminatingruleid",
                "Type": "string",
              },
              Object {
                "Name": "terminatingruletype",
                "Type": "string",
              },
              Object {
                "Name": "action",
                "Type": "string",
              },
              Object {
                "Name": "httpsourcename",
                "Type": "string",
              },
              Object {
                "Name": "httpsourceid",
                "Type": "string",
              },
              Object {
                "Name": "rulegrouplist",
                "Type": "array<string>",
              },
              Object {
                "Name": "ratebasedrulelist",
                "Type": "array<string>",
              },
              Object {
                "Name": "nonterminatingmatchingrules",
                "Type": "array<string>",
              },
              Object {
                "Name": "httprequest",
                "Type": "struct<clientip:string,country:string,headers:array<struct<name:string,value:string>>,uri:string,args:string,httpversion:string,httpmethod:string,requestid:string>",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "AutomatedWafWafLogBucket2EE15204",
                  },
                  "/AWSLogs/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.openx.data.jsonserde.JsonSerDe",
            },
            "StoredAsSubDirectories": false,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "AutomatedWafHTTPFloodSetIPV45E80241E": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block HTTP Flood IPV4 addresses",
        "IPAddressVersion": "IPV4",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "HTTPFloodSetIPV4",
            ],
          ],
        },
        "Scope": "REGIONAL",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafHTTPFloodSetIPV6B1957F78": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block HTTP Flood IPV6 addresses",
        "IPAddressVersion": "IPV6",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "HTTPFloodSetIPV6",
            ],
          ],
        },
        "Scope": "REGIONAL",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafHelperADDFD506": Object {
      "DependsOn": Array [
        "AutomatedWafHelperServiceRoleE6D147A2",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:eb7852c09e371e910ae5de85d56cae5e2cb4c0d85e522715e1125d5941307e71",
              ],
            ],
          },
        },
        "Description": "This lambda function verifies the main project's dependencies, requirements and implement auxiliary functions.",
        "Environment": Object {
          "Variables": Object {
            "LOG_LEVEL": "DEBUG",
            "SCOPE": "REGIONAL",
          },
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafHelperServiceRoleE6D147A2",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafHelperServiceRoleE6D147A2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafIPBadBotSetIPV4E08F64F0": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block Bad Bot IPV4 addresses",
        "IPAddressVersion": "IPV4",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "IPBadBotSetIPV4",
            ],
          ],
        },
        "Scope": "REGIONAL",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafIPBadBotSetIPV63981A4B4": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block Bad Bot IPV6 addresses",
        "IPAddressVersion": "IPV6",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "IPBadBotSetIPV6",
            ],
          ],
        },
        "Scope": "REGIONAL",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafIPReputationListsSetIPV4FCA0B71A": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block Reputation List IPV4 addresses",
        "IPAddressVersion": "IPV4",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "IPReputationListsSetIPV4",
            ],
          ],
        },
        "Scope": "REGIONAL",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafIPReputationListsSetIPV6863B7D87": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block Reputation List IPV6 addresses",
        "IPAddressVersion": "IPV6",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "IPReputationListsSetIPV6",
            ],
          ],
        },
        "Scope": "REGIONAL",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafLambdaRoleReputationListsParserC1735D71": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafLogParser4B05F1DC": Object {
      "DependsOn": Array [
        "AutomatedWafLogParserServiceRoleDefaultPolicy7CC70F1E",
        "AutomatedWafLogParserServiceRoleA0F93DE3",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:a1dbf41675e1b0318048d55ff15272b2269c0e349a10847b20d4788aa85916d8",
              ],
            ],
          },
        },
        "Description": "This function parses access logs to identify suspicious behavior, such as an abnormal amount of errors. It then blocks those IP addresses for a customer-defined period of time.",
        "Environment": Object {
          "Variables": Object {
            "APP_ACCESS_LOG_BUCKET": Object {
              "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
            },
            "ERROR_THRESHOLD": "50",
            "IP_SET_ID_HTTP_FLOODV4": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafHTTPFloodSetIPV45E80241E",
                "Arn",
              ],
            },
            "IP_SET_ID_HTTP_FLOODV6": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafHTTPFloodSetIPV6B1957F78",
                "Arn",
              ],
            },
            "IP_SET_ID_SCANNERS_PROBESV4": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafScannersProbesSetIPV4971BDD58",
                "Arn",
              ],
            },
            "IP_SET_ID_SCANNERS_PROBESV6": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafScannersProbesSetIPV6BD366E85",
                "Arn",
              ],
            },
            "IP_SET_NAME_HTTP_FLOODV4": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "HTTPFloodSetIPV4",
                ],
              ],
            },
            "IP_SET_NAME_HTTP_FLOODV6": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "HTTPFloodSetIPV6",
                ],
              ],
            },
            "IP_SET_NAME_SCANNERS_PROBESV4": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "ScannersProbesSetIPV4",
                ],
              ],
            },
            "IP_SET_NAME_SCANNERS_PROBESV6": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "ScannersProbesSetIPV6",
                ],
              ],
            },
            "LIMIT_IP_ADDRESS_RANGES_PER_IP_MATCH_CONDITION": "10000",
            "LOG_LEVEL": "DEBUG",
            "LOG_TYPE": "alb",
            "MAX_AGE_TO_UPDATE": "30",
            "METRICS_URL": "https://metrics.awssolutionsbuilder.com/generic",
            "METRIC_NAME_PREFIX": Object {
              "Ref": "AWS::StackName",
            },
            "REGION": "AWS::Region",
            "REQUEST_THRESHOLD": "300",
            "SCOPE": "REGIONAL",
            "SEND_ANONYMOUS_USAGE_DATA": "No",
            "SOLUTION_ID": "SO8128",
            "STACK_NAME": Object {
              "Ref": "AWS::StackName",
            },
            "UUID": "CreateUniqueID.UUID",
            "WAF_ACCESS_LOG_BUCKET": Object {
              "Ref": "AutomatedWafWafLogBucket2EE15204",
            },
            "WAF_BLOCK_PERIOD": "60",
          },
        },
        "ImageConfig": Object {
          "Command": Array [
            "log-parser.lambda_handler",
          ],
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLogParserServiceRoleA0F93DE3",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafLogParserServiceRoleA0F93DE3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafLogParserServiceRoleDefaultPolicy7CC70F1E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "glue:GetTable",
                "glue:GetPartitions",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      Object {
                        "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
                      },
                      "/waf_access_logs",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
                      },
                      "/app_access_logs",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "wafv2:GetIPSet",
                "wafv2:UpdateIPSet",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafHTTPFloodSetIPV45E80241E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafHTTPFloodSetIPV6B1957F78",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafScannersProbesSetIPV4971BDD58",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafScannersProbesSetIPV6BD366E85",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "athena:GetNamedQuery",
                "athena:StartQueryExecution",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":athena:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":workgroup/WAF*",
                  ],
                ],
              },
            },
            Object {
              "Action": "cloudwatch:GetMetricStatistics",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":athena:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/*LogParser*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:ListMultipartUploadParts",
                "s3:AbortMultipartUpload",
                "s3:CreateBucket",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/athena_results/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafAccessLogBucket5A7E0F8F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/athena_results/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafWafLogBucket2EE15204",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:ListMultipartUploadParts",
                "s3:AbortMultipartUpload",
                "s3:CreateBucket",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/athena_results/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/athena_results/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafWafLogBucket2EE15204",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafAccessLogBucket5A7E0F8F",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/TestStackAutomatedWafForALB-waf_log_out.json",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/TestStackAutomatedWafForALB-waf_log_conf.json",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/TestStackAutomatedWafForALB-waf_log_out.json",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafAccessLogBucket5A7E0F8F",
                          "Arn",
                        ],
                      },
                      "/TestStackAutomatedWafForALB-waf_log_conf.json",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AutomatedWafLogParserServiceRoleDefaultPolicy7CC70F1E",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafLogParserServiceRoleA0F93DE3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafMonitoringDashboardE81139D1": Object {
      "Properties": Object {
        "DashboardBody": "{\\"widgets\\":[{\\"type\\":\\"metric\\",\\"x\\":0,\\"y\\":0,\\"width\\":15,\\"height\\":10,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"stacked\\":false,\\"metrics\\":[[\\"WAF\\",\\"BlockedRequests\\",\\"WebACL\\",\\"WAFWebACLMetricName\\",\\"Rule\\",\\"ALL\\"],[\\"WAF\\",\\"AllowedRequests\\",\\"WebACL\\",\\"WAFWebACLMetricName\\",\\"Rule\\",\\"ALL\\"]],\\"region\\":\\"us-east-1\\",\\"period\\":300}}]}",
        "DashboardName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "WAFMonitoringDashboardAlb_Api",
              Object {
                "Ref": "AWS::Region",
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "AutomatedWafMoveS3LogsForPartition40692674": Object {
      "DependsOn": Array [
        "AutomatedWafMoveS3LogsForPartitionServiceRoleDefaultPolicyBE103735",
        "AutomatedWafMoveS3LogsForPartitionServiceRoleA16E415E",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:a1dbf41675e1b0318048d55ff15272b2269c0e349a10847b20d4788aa85916d8",
              ],
            ],
          },
        },
        "Description": "This function is triggered by S3 event to move log files(upon their arrival in s3) from their original location to a partitioned folder structure created per timestamps in file names, hence allowing the usage of partitioning within AWS Athena.",
        "Environment": Object {
          "Variables": Object {
            "ENDPOINT": "Alb",
            "KEEP_ORIGINAL_DATA": "No",
            "LOG_LEVEL": "DEBUG",
          },
        },
        "ImageConfig": Object {
          "Command": Array [
            "partition_s3_logs.lambda_handler",
          ],
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafMoveS3LogsForPartitionServiceRoleA16E415E",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafMoveS3LogsForPartitionServiceRoleA16E415E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafMoveS3LogsForPartitionServiceRoleDefaultPolicyBE103735": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":athena:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/*MoveS3LogsForPartition*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject",
                "s3:DeleteObject",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "AutomatedWafAccessLogBucket5A7E0F8F",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AutomatedWafMoveS3LogsForPartitionServiceRoleDefaultPolicyBE103735",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafMoveS3LogsForPartitionServiceRoleA16E415E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafReputationListsParser34210143": Object {
      "DependsOn": Array [
        "AutomatedWafLambdaRoleReputationListsParserC1735D71",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:b5dbbe39524d51c3b8aae20b2d5c91794d39f96b66f100c27591e6ba9d425326",
              ],
            ],
          },
        },
        "Description": "This lambda function checks third-party IP reputation lists hourly for new IP ranges to block. These lists include the Spamhaus Dont Route Or Peer (DROP) and Extended Drop (EDROP) lists, the Proofpoint Emerging Threats IP list, and the Tor exit node list.",
        "Environment": Object {
          "Variables": Object {
            "IPREPUTATIONLIST_METRICNAME": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "IPReputationListsRule",
                ],
              ],
            },
            "IP_SET_ID_REPUTATIONV4": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafIPReputationListsSetIPV4FCA0B71A",
                "Arn",
              ],
            },
            "IP_SET_ID_REPUTATIONV6": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafIPReputationListsSetIPV6863B7D87",
                "Arn",
              ],
            },
            "IP_SET_NAME_REPUTATIONV4": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "IPReputationListsSetIPV4",
                ],
              ],
            },
            "IP_SET_NAME_REPUTATIONV6": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "IPReputationListsSetIPV6",
                ],
              ],
            },
            "LOG_LEVEL": "DEBUG",
            "LOG_TYPE": "alb",
            "METRICS_URL": "https://metrics.awssolutionsbuilder.com/generic",
            "SCOPE": "REGIONAL",
            "SEND_ANONYMOUS_USAGE_DATA": "No",
            "SOLUTION_ID": "SO8128",
            "STACK_NAME": Object {
              "Ref": "AWS::StackName",
            },
            "URL_LIST": "[{\\"url\\":\\"https://www.spamhaus.org/drop/drop.txt\\"},{\\"url\\":\\"https://www.spamhaus.org/drop/edrop.txt\\"},{\\"url\\":\\"https://check.torproject.org/exit-addresses\\", \\"prefix\\":\\"ExitAddress\\"},{\\"url\\":\\"https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt\\"}]",
          },
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLambdaRoleReputationListsParserC1735D71",
            "Arn",
          ],
        },
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafReputationListsParserEventsRuleAllowEventRuleTestStackAutomatedWafForALBAutomatedWafReputationListsParser830676FC7B39850E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafReputationListsParser34210143",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafReputationListsParserEventsRuleCD91E1B1",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWafReputationListsParserEventsRuleCD91E1B1": Object {
      "Properties": Object {
        "Description": "Security Automation - WAF Reputation Lists",
        "ScheduleExpression": "rate(1 hour)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafReputationListsParser34210143",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"URL_LIST\\":[{\\"url\\":\\"https://www.spamhaus.org/drop/drop.txt\\"},{\\"url\\":\\"https://www.spamhaus.org/drop/edrop.txt\\"},{\\"url\\":\\"https://check.torproject.org/exit-addresses\\",\\"prefix\\":\\"ExitAddress\\"},{\\"url\\":\\"https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt\\"}],\\"IP_SET_ID_REPUTATIONV4\\":\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "AutomatedWafIPReputationListsSetIPV4FCA0B71A",
                      "Arn",
                    ],
                  },
                  "\\",\\"IP_SET_ID_REPUTATIONV6\\":\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "AutomatedWafIPReputationListsSetIPV6863B7D87",
                      "Arn",
                    ],
                  },
                  "\\",\\"IP_SET_NAME_REPUTATIONV4\\":\\"",
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "IPReputationListsSetIPV4\\",\\"IP_SET_NAME_REPUTATIONV6\\":\\"",
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "IPReputationListsSetIPV6\\",\\"SCOPE\\":\\"REGIONAL\\"}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AutomatedWafScannersProbesSetIPV4971BDD58": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block Scanners/Probes IPV4 addresses",
        "IPAddressVersion": "IPV4",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "ScannersProbesSetIPV4",
            ],
          ],
        },
        "Scope": "REGIONAL",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafScannersProbesSetIPV6BD366E85": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Block Scanners/Probes IPV6 addresses",
        "IPAddressVersion": "IPV6",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "ScannersProbesSetIPV6",
            ],
          ],
        },
        "Scope": "REGIONAL",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafWAFAddPartitionAthenaQueryWorkGroup49879515": Object {
      "Properties": Object {
        "Description": "Athena WorkGroup for adding Athena partition queries used by AWS WAF Security Automations Solution",
        "Name": "WAFAddPartitionAthenaQueryWorkGroupAlb_Api",
        "RecursiveDeleteOption": true,
        "State": "ENABLED",
        "WorkGroupConfiguration": Object {
          "EnforceWorkGroupConfiguration": false,
          "PublishCloudWatchMetricsEnabled": true,
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "AutomatedWafWAFAppAccessLogAthenaQueryWorkGroupFE2E8C88": Object {
      "Properties": Object {
        "Description": "Athena WorkGroup for CloudFront or ALB application access log queries used by AWS WAF Security Automations Solution",
        "Name": "WAFAppAccessLogAthenaQueryWorkGroupAlb_Api",
        "RecursiveDeleteOption": true,
        "State": "ENABLED",
        "WorkGroupConfiguration": Object {
          "PublishCloudWatchMetricsEnabled": true,
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "AutomatedWafWAFGetAndUpdateIPSet1848DC2F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "wafv2:GetIPSet",
                "wafv2:UpdateIPSet",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WAFGetAndUpdateIPSet",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafLambdaRoleReputationListsParserC1735D71",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafWAFLogAthenaQueryWorkGroup478EEEAE": Object {
      "Properties": Object {
        "Description": "Athena WorkGroup for WAF log queries used by AWS WAF Security Automations Solution",
        "Name": "WAFLogAthenaQueryWorkGroupAlb_Api",
        "RecursiveDeleteOption": true,
        "State": "ENABLED",
        "WorkGroupConfiguration": Object {
          "PublishCloudWatchMetricsEnabled": true,
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "AutomatedWafWafLogBucket2EE15204": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafWafLogBucketAllowBucketNotificationsToTestStackAutomatedWafForALBAutomatedWafLogParser4478D8200F00113C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLogParser4B05F1DC",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafWafLogBucket2EE15204",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWafWafLogBucketAutoDeleteObjectsCustomResource776A478E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AutomatedWafWafLogBucketPolicy62BAB889",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "AutomatedWafWafLogBucket2EE15204",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "AutomatedWafWafLogBucketNotificationsD40C475A": Object {
      "DependsOn": Array [
        "AutomatedWafWafLogBucketAllowBucketNotificationsToTestStackAutomatedWafForALBAutomatedWafLogParser4478D8200F00113C",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "AutomatedWafWafLogBucket2EE15204",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "LambdaFunctionConfigurations": Array [
            Object {
              "Events": Array [
                "s3:ObjectCreated:*",
              ],
              "Filter": Object {
                "Key": Object {
                  "FilterRules": Array [
                    Object {
                      "Name": "suffix",
                      "Value": "csv",
                    },
                    Object {
                      "Name": "prefix",
                      "Value": "athena_results/",
                    },
                  ],
                },
              },
              "LambdaFunctionArn": Object {
                "Fn::GetAtt": Array [
                  "AutomatedWafLogParser4B05F1DC",
                  "Arn",
                ],
              },
            },
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "AutomatedWafWafLogBucketPolicy62BAB889": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "AutomatedWafWafLogBucket2EE15204",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AutomatedWafWafLogBucket2EE15204",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWafLogBucket2EE15204",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "AutomatedWafWhitelistSetIPV44815715F": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Allow whitelist for IPV4 addresses",
        "IPAddressVersion": "IPV4",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "WhitelistSetIPV4",
            ],
          ],
        },
        "Scope": "REGIONAL",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafWhitelistSetIPV6F7FFF598": Object {
      "Properties": Object {
        "Addresses": Array [],
        "Description": "Allow whitelist for IPV6 addresses",
        "IPAddressVersion": "IPV6",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "WhitelistSetIPV6",
            ],
          ],
        },
        "Scope": "REGIONAL",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "AutomatedWafcustomResourceProviderframeworkonEvent19DF6B81": Object {
      "DependsOn": Array [
        "AutomatedWafcustomResourceProviderframeworkonEventServiceRoleDefaultPolicyD7A10B89",
        "AutomatedWafcustomResourceProviderframeworkonEventServiceRole2DA7C1F7",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - onEvent (TestStackAutomatedWafForALB/AutomatedWaf/customResourceProvider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafCustomResourceD07D74AF",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafcustomResourceProviderframeworkonEventServiceRole2DA7C1F7",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AutomatedWafcustomResourceProviderframeworkonEventServiceRole2DA7C1F7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutomatedWafcustomResourceProviderframeworkonEventServiceRoleDefaultPolicyD7A10B89": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AutomatedWafCustomResourceD07D74AF",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AutomatedWafcustomResourceProviderframeworkonEventServiceRoleDefaultPolicyD7A10B89",
        "Roles": Array [
          Object {
            "Ref": "AutomatedWafcustomResourceProviderframeworkonEventServiceRole2DA7C1F7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutomatedWafglueAppAccessLogsTable61BB14AB": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
        },
        "TableInput": Object {
          "Description": "TestStackAutomatedWafForALB - APP Access Logs",
          "Name": "app_access_logs",
          "Parameters": Object {
            "EXTERNAL": "TRUE",
          },
          "PartitionKeys": Array [
            Object {
              "Name": "year",
              "Type": "int",
            },
            Object {
              "Name": "month",
              "Type": "int",
            },
            Object {
              "Name": "day",
              "Type": "int",
            },
            Object {
              "Name": "hour",
              "Type": "int",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "type",
                "Type": "string",
              },
              Object {
                "Name": "time",
                "Type": "string",
              },
              Object {
                "Name": "elb",
                "Type": "string",
              },
              Object {
                "Name": "client_ip",
                "Type": "string",
              },
              Object {
                "Name": "client_port",
                "Type": "int",
              },
              Object {
                "Name": "target_ip",
                "Type": "string",
              },
              Object {
                "Name": "target_port",
                "Type": "int",
              },
              Object {
                "Name": "request_processing_time",
                "Type": "double",
              },
              Object {
                "Name": "target_processing_time",
                "Type": "double",
              },
              Object {
                "Name": "response_processing_time",
                "Type": "double",
              },
              Object {
                "Name": "elb_status_code",
                "Type": "string",
              },
              Object {
                "Name": "target_status_code",
                "Type": "string",
              },
              Object {
                "Name": "received_bytes",
                "Type": "bigint",
              },
              Object {
                "Name": "sent_bytes",
                "Type": "bigint",
              },
              Object {
                "Name": "request_verb",
                "Type": "string",
              },
              Object {
                "Name": "request_url",
                "Type": "string",
              },
              Object {
                "Name": "request_proto",
                "Type": "string",
              },
              Object {
                "Name": "user_agent",
                "Type": "string",
              },
              Object {
                "Name": "ssl_cipher",
                "Type": "string",
              },
              Object {
                "Name": "ssl_protocol",
                "Type": "string",
              },
              Object {
                "Name": "target_group_arn",
                "Type": "string",
              },
              Object {
                "Name": "trace_id",
                "Type": "string",
              },
              Object {
                "Name": "domain_name",
                "Type": "string",
              },
              Object {
                "Name": "chosen_cert_arn",
                "Type": "string",
              },
              Object {
                "Name": "matched_rule_priority",
                "Type": "string",
              },
              Object {
                "Name": "request_creation_time",
                "Type": "string",
              },
              Object {
                "Name": "actions_executed",
                "Type": "string",
              },
              Object {
                "Name": "redirect_url",
                "Type": "string",
              },
              Object {
                "Name": "error_reason",
                "Type": "string",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
                  },
                  "/AWSLogs-Partitioned/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
            "SerdeInfo": Object {
              "Parameters": Object {
                "input.regex": "([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \\"([^ ]*) ([^ ]*) (- |[^ ]*)\\" \\"([^\\"]*)\\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \\"([^\\"]*)\\" \\"([^\\"]*)\\" \\"([^\\"]*)\\" ([-.0-9]*) ([^ ]*) \\"([^\\"]*)\\" \\"([^ ]*)\\" \\"([^ ].*)\\"",
                "serialization.format": "1",
              },
              "SerializationLibrary": "org.apache.hadoop.hive.serde2.RegexSerDe",
            },
            "StoredAsSubDirectories": false,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "AutomatedWaflambdaAddAthenaPartitionAllowEventRuleTestStackAutomatedWafForALBAutomatedWafAddAthenaPartitionsFunctionAA95056AA5E18E46": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafAddAthenaPartitionsFunction2D4DB365",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWaflambdaAddAthenaPartitionDD4D8921",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWaflambdaAddAthenaPartitionDD4D8921": Object {
      "Properties": Object {
        "Description": "Security Automations - Add partitions to Athena table",
        "ScheduleExpression": "rate(1 hour)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafAddAthenaPartitionsFunction2D4DB365",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"resourceType\\":\\"LambdaAddAthenaPartitionsEventsRule\\",\\"glueAccessLogsDatabase\\":\\"",
                  Object {
                    "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
                  },
                  "\\",\\"accessLogBucket\\":\\"",
                  Object {
                    "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
                  },
                  "\\",\\"glueAppAccessLogsTable\\":\\"app_access_logs\\",\\"glueWafAccessLogsTable\\":\\"",
                  Object {
                    "Ref": "AutomatedWafGlueWafAccessLogsTable323DC62F",
                  },
                  "\\",\\"wafLogBucket\\":\\"",
                  Object {
                    "Ref": "AutomatedWafWafLogBucket2EE15204",
                  },
                  "\\",\\"athenaWorkGroup\\":\\"WAFAddPartitionAthenaQueryWorkGroupAlb_Api\\"}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AutomatedWaflambdaAthenaAppLogParserRule9657CE82": Object {
      "Properties": Object {
        "Description": "Security Automation - App Logs Athena parser",
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafLogParser4B05F1DC",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"resourceType\\":\\"LambdaAthenaAppLogParser\\",\\"glueAccessLogsDatabase\\":\\"",
                  Object {
                    "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
                  },
                  "\\",\\"accessLogBucket\\":\\"",
                  Object {
                    "Ref": "AutomatedWafAccessLogBucket5A7E0F8F",
                  },
                  "\\",\\"glueAppAccessLogsTable\\":\\"app_access_logs\\",\\"athenaWorkGroup\\":\\"WAFAppAccessLogAthenaQueryWorkGroupAlb_Api\\"}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AutomatedWaflambdaAthenaAppLogParserRuleAllowEventRuleTestStackAutomatedWafForALBAutomatedWafLogParser4478D820E43E335E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLogParser4B05F1DC",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWaflambdaAthenaAppLogParserRule9657CE82",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWaflambdaAthenaWAFLogParserRule877B7CDF": Object {
      "Properties": Object {
        "Description": "Security Automation - WAF Logs Athena parser",
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AutomatedWafLogParser4B05F1DC",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"resourceType\\":\\"LambdaAthenaWAFLogParser\\",\\"glueAccessLogsDatabase\\":\\"",
                  Object {
                    "Ref": "AutomatedWafGlueAccessLogsDatabaseA7CECCA5",
                  },
                  "\\",\\"accessLogBucket\\":\\"",
                  Object {
                    "Ref": "AutomatedWafWafLogBucket2EE15204",
                  },
                  "\\",\\"glueWafAccessLogsTable\\":\\"",
                  Object {
                    "Ref": "AutomatedWafGlueWafAccessLogsTable323DC62F",
                  },
                  "\\",\\"athenaWorkGroup\\":\\"WAFLogAthenaQueryWorkGroupAlb_Api\\"}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AutomatedWaflambdaAthenaWAFLogParserRuleAllowEventRuleTestStackAutomatedWafForALBAutomatedWafLogParser4478D8208BC869FB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AutomatedWafLogParser4B05F1DC",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AutomatedWaflambdaAthenaWAFLogParserRule877B7CDF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AutomatedWafwafwebB879D566": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Description": "Custom WAFWebACL",
        "Name": "Alb_Api-WAF",
        "Rules": Array [
          Object {
            "Name": "AWS-AWSManagedRulesCommonRuleSet",
            "OverrideAction": Object {
              "None": Object {},
            },
            "Priority": 0,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "Alb_Api-waf-ipset-metrics",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Allow": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "WhitelistRule",
                ],
              ],
            },
            "Priority": 1,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWhitelistSetIPV44815715F",
                          "Arn",
                        ],
                      },
                    },
                  },
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafWhitelistSetIPV6F7FFF598",
                          "Arn",
                        ],
                      },
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "WhitelistRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "BlacklistRule",
                ],
              ],
            },
            "Priority": 2,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafBlacklistSetIPV4C531747A",
                          "Arn",
                        ],
                      },
                    },
                  },
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafBlacklistSetIPV6BE33F4F7",
                          "Arn",
                        ],
                      },
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "BlacklistRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "HttpFloodRegularRule",
                ],
              ],
            },
            "Priority": 3,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafHTTPFloodSetIPV45E80241E",
                          "Arn",
                        ],
                      },
                    },
                  },
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafHTTPFloodSetIPV6B1957F78",
                          "Arn",
                        ],
                      },
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "HttpFloodRegularRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "ScannersProbesRule",
                ],
              ],
            },
            "Priority": 5,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafScannersProbesSetIPV4971BDD58",
                          "Arn",
                        ],
                      },
                    },
                  },
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafScannersProbesSetIPV6BD366E85",
                          "Arn",
                        ],
                      },
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "ScannersProbesRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "IPReputationListsRule",
                ],
              ],
            },
            "Priority": 6,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafIPReputationListsSetIPV4FCA0B71A",
                          "Arn",
                        ],
                      },
                    },
                  },
                  Object {
                    "IPSetReferenceStatement": Object {
                      "Arn": Object {
                        "Fn::GetAtt": Array [
                          "AutomatedWafIPReputationListsSetIPV6863B7D87",
                          "Arn",
                        ],
                      },
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "IPReputationListsRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "SqlInjectionRule",
                ],
              ],
            },
            "Priority": 20,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "SqliMatchStatement": Object {
                      "FieldToMatch": Object {
                        "QueryString": Object {},
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                  Object {
                    "SqliMatchStatement": Object {
                      "FieldToMatch": Object {
                        "Body": Object {},
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                  Object {
                    "SqliMatchStatement": Object {
                      "FieldToMatch": Object {
                        "UriPath": Object {},
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                  Object {
                    "SqliMatchStatement": Object {
                      "FieldToMatch": Object {
                        "SingleHeader": Object {
                          "Name": "Authorization",
                        },
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                  Object {
                    "SqliMatchStatement": Object {
                      "FieldToMatch": Object {
                        "SingleHeader": Object {
                          "Name": "Cookie",
                        },
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "SqlInjectionRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "XssRule",
                ],
              ],
            },
            "Priority": 30,
            "Statement": Object {
              "OrStatement": Object {
                "Statements": Array [
                  Object {
                    "XssMatchStatement": Object {
                      "FieldToMatch": Object {
                        "QueryString": Object {},
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                  Object {
                    "XssMatchStatement": Object {
                      "FieldToMatch": Object {
                        "Body": Object {},
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                  Object {
                    "XssMatchStatement": Object {
                      "FieldToMatch": Object {
                        "UriPath": Object {},
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                  Object {
                    "XssMatchStatement": Object {
                      "FieldToMatch": Object {
                        "SingleHeader": Object {
                          "name": "Cookie",
                        },
                      },
                      "TextTransformations": Array [
                        Object {
                          "Priority": 1,
                          "Type": "URL_DECODE",
                        },
                        Object {
                          "Priority": 2,
                          "Type": "HTML_ENTITY_DECODE",
                        },
                      ],
                    },
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "XssRule",
                  ],
                ],
              },
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "REGIONAL",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "Alb_Api-WAF",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": Object {
      "DependsOn": Array [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "import boto3  # type: ignore
import json
import logging
import urllib.request

s3 = boto3.client(\\"s3\\")

CONFIGURATION_TYPES = [\\"TopicConfigurations\\", \\"QueueConfigurations\\", \\"LambdaFunctionConfigurations\\"]

def handler(event: dict, context):
    response_status = \\"SUCCESS\\"
    error_message = \\"\\"
    try:
        props = event[\\"ResourceProperties\\"]
        bucket = props[\\"BucketName\\"]
        notification_configuration = props[\\"NotificationConfiguration\\"]
        request_type = event[\\"RequestType\\"]
        managed = props.get('Managed', 'true').lower() == 'true'
        stack_id = event['StackId']

        if managed:
          config = handle_managed(request_type, notification_configuration)
        else:
          config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

        put_bucket_notification_configuration(bucket, config)
    except Exception as e:
        logging.exception(\\"Failed to put bucket notification configuration\\")
        response_status = \\"FAILED\\"
        error_message = f\\"Error: {str(e)}. \\"
    finally:
        submit_response(event, context, response_status, error_message)


def handle_managed(request_type, notification_configuration):
  if request_type == 'Delete':
    return {}
  return notification_configuration


def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):

  # find external notifications
  external_notifications = find_external_notifications(bucket, stack_id)

  # if delete, that's all we need
  if request_type == 'Delete':
    return external_notifications

  def with_id(notification):
    notification['Id'] = f\\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\\"
    return notification

  # otherwise, merge external with incoming config and augment with id
  notifications = {}
  for t in CONFIGURATION_TYPES:
    external = external_notifications.get(t, [])
    incoming = [with_id(n) for n in notification_configuration.get(t, [])]
    notifications[t] = external + incoming
  return notifications


def find_external_notifications(bucket, stack_id):
  existing_notifications = get_bucket_notification_configuration(bucket)
  external_notifications = {}
  for t in CONFIGURATION_TYPES:
    # if the notification was created by us, we know what id to expect
    # so we can filter by it.
    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\\"{stack_id}-\\")]

  return external_notifications


def get_bucket_notification_configuration(bucket):
  return s3.get_bucket_notification_configuration(Bucket=bucket)


def put_bucket_notification_configuration(bucket, notification_configuration):
  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)


def submit_response(event: dict, context, response_status: str, error_message: str):
    response_body = json.dumps(
        {
            \\"Status\\": response_status,
            \\"Reason\\": f\\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\\",
            \\"PhysicalResourceId\\": event.get(\\"PhysicalResourceId\\") or event[\\"LogicalResourceId\\"],
            \\"StackId\\": event[\\"StackId\\"],
            \\"RequestId\\": event[\\"RequestId\\"],
            \\"LogicalResourceId\\": event[\\"LogicalResourceId\\"],
            \\"NoEcho\\": False,
        }
    ).encode(\\"utf-8\\")
    headers = {\\"content-type\\": \\"\\", \\"content-length\\": str(len(response_body))}
    try:
        req = urllib.request.Request(url=event[\\"ResponseURL\\"], headers=headers, data=response_body, method=\\"PUT\\")
        with urllib.request.urlopen(req) as response:
            print(response.read().decode(\\"utf-8\\"))
        print(\\"Status code: \\" + response.reason)
    except Exception as e:
        print(\\"send(..) failed executing request.urlopen(..): \\" + str(e))
",
        },
        "Description": "AWS CloudFormation handler for \\"Custom::S3BucketNotifications\\" resources (@aws-cdk/aws-s3)",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn",
          ],
        },
        "Runtime": "python3.7",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": Array [
          Object {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3Bucket33B61C3E",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3VersionKeyDE2514FF",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494S3VersionKeyDE2514FF",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "AutomatedWafWafLogBucket2EE15204",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
